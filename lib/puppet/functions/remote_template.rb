# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Evaluate template(s) fetched from a URL and return its value.
#
Puppet::Functions.create_function(:'remote_template') do
  # @param vals
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :vals
  end


  def default_impl(*vals)
    

  require 'erb'
  require 'open-uri'

    vals.collect do |url|
      content = ""
      begin
        open(url) {|f|
          content = f.read()
        }
      rescue => detail
        raise Puppet::ParseError,
          "Failed to fetch remote template at #{url}: #{detail}"
      end

      wrapper = Puppet::Parser::TemplateWrapper.new(self)
      begin
        wrapper.result(content)
      rescue => detail
        raise Puppet::ParseError,
          "Failed to parse remote template at #{url}: #{detail}"
      end
    end.join("")

  end
end
